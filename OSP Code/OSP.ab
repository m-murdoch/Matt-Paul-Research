affine OSP {N|N>1}
input int M {i|0<=i<=N};
output
	int C {i,j| N>=j >=i>=1};
let
  C[i,j] = case
	{|i==j} : 0;
	{|i<j} : reduce(min, [k], {|i<=k<j}: C[i,k] + C[k+1,j] + M[i-1] * M[k] * M[j]);
	esac;
.