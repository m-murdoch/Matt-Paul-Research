Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.3.199 Build 20190206

Compiler options: -I/usr/include/malloc/ -o OSP.o -O3 -std=c99 -qopt-report-phase=vec,loop -qopt-report=5 -lm -c

Begin optimization report for: OSP(long, int *, int **)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at OSP.c(127,2)
   remark #15389: vectorization support: reference Main[mz1] has unaligned access   [ OSP.c(128,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.070
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 12.500 
   remark #15478: estimated potential speedup: 0.560 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 8  
LOOP END

LOOP BEGIN at OSP.c(127,2)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at OSP.c(146,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at OSP.c(148,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at OSP.c(148,5)
      remark #15388: vectorization support: reference Main[c1+N][c3] has aligned access   [ OSP.c(150,7) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 4.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 3.650 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at OSP.c(148,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at OSP.c(153,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at OSP.c(153,5)
      remark #15388: vectorization support: reference Main[c1+N][c3] has aligned access   [ OSP.c(155,7) ]
      remark #15389: vectorization support: reference C[c1+N+1][c3] has unaligned access   [ OSP.c(155,7) ]
      remark #15388: vectorization support: reference M[c3] has aligned access   [ OSP.c(155,7) ]
      remark #15388: vectorization support: reference Main[c1+N][c3] has aligned access   [ OSP.c(155,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.926
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 17 
      remark #15477: vector cost: 6.750 
      remark #15478: estimated potential speedup: 2.430 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at OSP.c(153,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at OSP.c(153,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at OSP.c(157,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at OSP.c(160,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at OSP.c(160,7)
         remark #15388: vectorization support: reference Main[c1+N][c3] has aligned access   [ OSP.c(162,9) ]
         remark #15389: vectorization support: reference C[c2+1][c3] has unaligned access   [ OSP.c(162,9) ]
         remark #15388: vectorization support: reference M[c3] has aligned access   [ OSP.c(162,9) ]
         remark #15388: vectorization support: reference Main[c1+N][c3] has aligned access   [ OSP.c(162,9) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 4
         remark #15309: vectorization support: normalized vectorization overhead 0.926
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 17 
         remark #15477: vector cost: 6.750 
         remark #15478: estimated potential speedup: 2.430 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at OSP.c(160,7)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at OSP.c(160,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================
